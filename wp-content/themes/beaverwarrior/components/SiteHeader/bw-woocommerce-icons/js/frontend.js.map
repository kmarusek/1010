{"version":3,"file":"frontend.js","names":["BWModuleFrontend","settings","_initSentry","id","element","document","querySelector","warn","elements","objectType","_getObjectType","init","sentry_data","environment","Sentry","dsn","message","data","level","undefined","captureMessage","fingerprint","constructor","name","arguments_object","arguments","argument_to_log","length","i","push","console","debug","log","sentryLog","error","BWWooCommerceIcons","_handleUpdateCartQuantities","elem","addEventListener","e","_updateCartQuantityBadge","icon_badges","querySelectorAll","new_quantity","detail","cartItemQuantity","badge","badge_parent","closest","classList","add","remove","innerHTML"],"sources":["components/SiteHeader/bw-woocommerce-icons/js/frontend.prebuilt.js"],"sourcesContent":["/* jshint ignore:start */\r\nclass BWModuleFrontend { \r\n\r\n    /**\r\n     * The main constructor method for the super class. This is called on init.\r\n     *\r\n     * @param  {object} settings An object of settings\r\n     *\r\n     * @return {void}\r\n     */\r\n     constructor( settings ){\r\n        // Init sentry\r\n        this._initSentry();\r\n\r\n        // Add the settings\r\n        this.settings = settings;\r\n        // If we were provided an ID\r\n        if ( settings.id ){\r\n            // Add the element ID\r\n            this.id = settings.id;\r\n            // Add the element\r\n            this.element = document.querySelector( '.fl-node-' + this.id );\r\n            // If we can't find the element, abort\r\n            if ( !this.element ){\r\n                this.warn(`Error! Unable to locate element .fl-node-${this.id}`)\r\n                return\r\n            }\r\n        } \r\n        // Default elements\r\n        this.elements = {};\r\n        // Bind the type of object this is \r\n        this.objectType = this._getObjectType();\r\n        // Init the child function\r\n        this.init();\r\n    }   \r\n\r\n\r\n    /**\r\n     * Method to init the Sentry Object\r\n     *\r\n     * @return {void}\r\n     */\r\n     _initSentry(){\r\n        if ( sentry_data.environment ){\r\n            Sentry.init({ dsn: 'https://9097fbf7ed4247e7a5425f1a0654f37e@sentry.io/1460499' });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method to log something to the Sentry obecjt\r\n     *\r\n     * @param  {object} message The object to log\r\n     *\r\n     * @return {void}         \r\n     */\r\n     sentryLog( message, data = {}, level = 'error' ){\r\n        if ( Sentry !== undefined ){\r\n            Sentry.captureMessage( message, {\r\n                data        : data,\r\n                level       : level,\r\n                fingerprint : ['{{ default }}', sentry_data.environment]\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method to get the name of the current object (used in debugging logs).\r\n     *\r\n     * @return {string} The name of the current object\r\n     */\r\n     _getObjectType(){\r\n        return this.constructor.name;\r\n    }\r\n\r\n    /**\r\n     * Method to log messages to the console.   \r\n     *\r\n     * @param  {mixed} message The mixed type to log\r\n     *\r\n     * @return {void}\r\n     */\r\n     debug( message ){\r\n        // Get the arguments\r\n        let arguments_object = arguments,\r\n        // The default argument to log is just the message\r\n        argument_to_log      = message;\r\n        // If the length is more than one, we need to make an array\r\n        if ( arguments_object.length > 1 ){\r\n            // Redeclare the argument to log as an array\r\n            argument_to_log = [];\r\n            // Add all the arguments\r\n            for ( let i=0; i<arguments.length; i++){\r\n                argument_to_log.push( arguments[i] );\r\n            }\r\n        }\r\n        // Log it\r\n        console.debug(this.constructor.name + ' -', argument_to_log);\r\n    }\r\n\r\n    /**\r\n     * Method to log messages to the console.   \r\n     *\r\n     * @param  {mixed} message The mixed type to log\r\n     *\r\n     * @return {void}\r\n     */\r\n     log( message ){\r\n        // Get the arguments\r\n        let arguments_object = arguments,\r\n        // The default argument to log is just the message\r\n        argument_to_log      = message;\r\n        // If the length is more than one, we need to make an array\r\n        if ( arguments_object.length > 1 ){\r\n            // Redeclare the argument to log as an array\r\n            argument_to_log = [];\r\n            // Add all the arguments\r\n            for ( let i=0; i<arguments.length; i++){\r\n                argument_to_log.push( arguments[i] );\r\n            }\r\n        }\r\n        // Log it\r\n        console.log(this.constructor.name + ' -', argument_to_log);\r\n    }\r\n\r\n    /**\r\n     * Method to log warning messages to the console.   \r\n     *\r\n     * @param  {mixed} message The mixed type to log\r\n     *\r\n     * @return {void}\r\n     */\r\n     warn( message ){\r\n        // Get the arguments\r\n        let arguments_object = arguments,\r\n        // The default argument to log is just the message\r\n        argument_to_log      = message;\r\n        // If the length is more than one, we need to make an array\r\n        if ( arguments_object.length > 1 ){\r\n            // Redeclare the argument to log as an array\r\n            argument_to_log = [];\r\n            // Add all the arguments\r\n            for ( let i=0; i<arguments.length; i++){\r\n                argument_to_log.push( arguments[i] );\r\n            }\r\n        }\r\n        // Log it\r\n        console.warn(this.constructor.name + ' -', argument_to_log);\r\n    }\r\n\r\n    /**\r\n     * Method to log error messages to the console.   \r\n     *\r\n     * @param  {mixed} message The mixed type to log\r\n     *\r\n     * @return {void}\r\n     */\r\n     error( message ){\r\n        // Get the arguments\r\n        let arguments_object = arguments,\r\n        // The default argument to log is just the message\r\n        argument_to_log      = message;\r\n        // If the length is more than one, we need to make an array\r\n        if ( arguments_object.length > 1 ){\r\n            // Redeclare the argument to log as an array\r\n            argument_to_log = [];\r\n            // Add all the arguments\r\n            for ( let i=0; i<arguments.length; i++){\r\n                argument_to_log.push( arguments[i] );\r\n            }\r\n        }\r\n        this.sentryLog(argument_to_log)\r\n        // Log it\r\n        console.error(this.constructor.name + ' -', argument_to_log);\r\n    }\r\n};\r\n/* jshint ignore:end */\r\n\r\n/**\r\n * The main class used for the social icons.\r\n */\r\n class BWWooCommerceIcons extends BWModuleFrontend {\r\n\r\n    /**\r\n     * Method automatically called by the superclass\r\n     *\r\n     * @return {void} \r\n     */\r\n     init(){\r\n        // Handle clicking for the Add to Cart buttons\r\n        this._handleUpdateCartQuantities()\r\n    }\r\n\r\n    /**\r\n     * Method designated to listen for an event that tells us that an item\r\n     * has been added to the WC cart via AJAX.\r\n     *\r\n     * @return {void}\r\n     */\r\n     _handleUpdateCartQuantities(){\r\n        const elem = document.querySelector('html');\r\n        elem.addEventListener('wc-update-cart-quantity', (e) => {\r\n            this._updateCartQuantityBadge(e);\r\n        }, false)\r\n    }\r\n\r\n    _updateCartQuantityBadge(data){\r\n        const icon_badges = this.element.querySelectorAll('.cart-icon-badge')\r\n        const new_quantity = data.detail.cartItemQuantity\r\n        // It's possible to have multiple badges in the same module even though that'd\r\n        // be dumb\r\n        for ( let i=0; i<icon_badges.length; i++){\r\n            const badge        = icon_badges[i]\r\n            const badge_parent = badge.closest( '.woocommerce-icon' )\r\n\r\n            if ( data.detail.cartItemQuantity > 0 ){\r\n                badge_parent.classList.add( 'woocommerce-icon-has-badge' )\r\n            }\r\n            else {\r\n                badge_parent.classList.remove( 'woocommerce-icon-has-badge' )\r\n            }\r\n            badge.innerHTML = new_quantity\r\n        }\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;IACMA,gB;EAEF;AACJ;AACA;AACA;AACA;AACA;AACA;EACK,0BAAaC,QAAb,EAAuB;IAAA;;IACpB;IACA,KAAKC,WAAL,GAFoB,CAIpB;;;IACA,KAAKD,QAAL,GAAgBA,QAAhB,CALoB,CAMpB;;IACA,IAAKA,QAAQ,CAACE,EAAd,EAAkB;MACd;MACA,KAAKA,EAAL,GAAUF,QAAQ,CAACE,EAAnB,CAFc,CAGd;;MACA,KAAKC,OAAL,GAAeC,QAAQ,CAACC,aAAT,CAAwB,cAAc,KAAKH,EAA3C,CAAf,CAJc,CAKd;;MACA,IAAK,CAAC,KAAKC,OAAX,EAAoB;QAChB,KAAKG,IAAL,oDAAsD,KAAKJ,EAA3D;QACA;MACH;IACJ,CAjBmB,CAkBpB;;;IACA,KAAKK,QAAL,GAAgB,EAAhB,CAnBoB,CAoBpB;;IACA,KAAKC,UAAL,GAAkB,KAAKC,cAAL,EAAlB,CArBoB,CAsBpB;;IACA,KAAKC,IAAL;EACH;EAGD;AACJ;AACA;AACA;AACA;;;;;WACK,uBAAa;MACV,IAAKC,WAAW,CAACC,WAAjB,EAA8B;QAC1BC,MAAM,CAACH,IAAP,CAAY;UAAEI,GAAG,EAAE;QAAP,CAAZ;MACH;IACJ;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACK,mBAAWC,OAAX,EAAgD;MAAA,IAA5BC,IAA4B,uEAArB,EAAqB;MAAA,IAAjBC,KAAiB,uEAAT,OAAS;;MAC7C,IAAKJ,MAAM,KAAKK,SAAhB,EAA2B;QACvBL,MAAM,CAACM,cAAP,CAAuBJ,OAAvB,EAAgC;UAC5BC,IAAI,EAAUA,IADc;UAE5BC,KAAK,EAASA,KAFc;UAG5BG,WAAW,EAAG,CAAC,eAAD,EAAkBT,WAAW,CAACC,WAA9B;QAHc,CAAhC;MAKH;IACJ;IAED;AACJ;AACA;AACA;AACA;;;;WACK,0BAAgB;MACb,OAAO,KAAKS,WAAL,CAAiBC,IAAxB;IACH;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACK,eAAOP,OAAP,EAAgB;MACb;MACA,IAAIQ,gBAAgB,GAAGC,SAAvB;MAAA,IACA;MACAC,eAAe,GAAQV,OAFvB,CAFa,CAKb;;MACA,IAAKQ,gBAAgB,CAACG,MAAjB,GAA0B,CAA/B,EAAkC;QAC9B;QACAD,eAAe,GAAG,EAAlB,CAF8B,CAG9B;;QACA,KAAM,IAAIE,CAAC,GAAC,CAAZ,EAAeA,CAAC,GAACH,SAAS,CAACE,MAA3B,EAAmCC,CAAC,EAApC,EAAuC;UACnCF,eAAe,CAACG,IAAhB,CAAsBJ,SAAS,CAACG,CAAD,CAA/B;QACH;MACJ,CAbY,CAcb;;;MACAE,OAAO,CAACC,KAAR,CAAc,KAAKT,WAAL,CAAiBC,IAAjB,GAAwB,IAAtC,EAA4CG,eAA5C;IACH;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACK,aAAKV,OAAL,EAAc;MACX;MACA,IAAIQ,gBAAgB,GAAGC,SAAvB;MAAA,IACA;MACAC,eAAe,GAAQV,OAFvB,CAFW,CAKX;;MACA,IAAKQ,gBAAgB,CAACG,MAAjB,GAA0B,CAA/B,EAAkC;QAC9B;QACAD,eAAe,GAAG,EAAlB,CAF8B,CAG9B;;QACA,KAAM,IAAIE,CAAC,GAAC,CAAZ,EAAeA,CAAC,GAACH,SAAS,CAACE,MAA3B,EAAmCC,CAAC,EAApC,EAAuC;UACnCF,eAAe,CAACG,IAAhB,CAAsBJ,SAAS,CAACG,CAAD,CAA/B;QACH;MACJ,CAbU,CAcX;;;MACAE,OAAO,CAACE,GAAR,CAAY,KAAKV,WAAL,CAAiBC,IAAjB,GAAwB,IAApC,EAA0CG,eAA1C;IACH;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACK,cAAMV,OAAN,EAAe;MACZ;MACA,IAAIQ,gBAAgB,GAAGC,SAAvB;MAAA,IACA;MACAC,eAAe,GAAQV,OAFvB,CAFY,CAKZ;;MACA,IAAKQ,gBAAgB,CAACG,MAAjB,GAA0B,CAA/B,EAAkC;QAC9B;QACAD,eAAe,GAAG,EAAlB,CAF8B,CAG9B;;QACA,KAAM,IAAIE,CAAC,GAAC,CAAZ,EAAeA,CAAC,GAACH,SAAS,CAACE,MAA3B,EAAmCC,CAAC,EAApC,EAAuC;UACnCF,eAAe,CAACG,IAAhB,CAAsBJ,SAAS,CAACG,CAAD,CAA/B;QACH;MACJ,CAbW,CAcZ;;;MACAE,OAAO,CAACvB,IAAR,CAAa,KAAKe,WAAL,CAAiBC,IAAjB,GAAwB,IAArC,EAA2CG,eAA3C;IACH;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACK,eAAOV,OAAP,EAAgB;MACb;MACA,IAAIQ,gBAAgB,GAAGC,SAAvB;MAAA,IACA;MACAC,eAAe,GAAQV,OAFvB,CAFa,CAKb;;MACA,IAAKQ,gBAAgB,CAACG,MAAjB,GAA0B,CAA/B,EAAkC;QAC9B;QACAD,eAAe,GAAG,EAAlB,CAF8B,CAG9B;;QACA,KAAM,IAAIE,CAAC,GAAC,CAAZ,EAAeA,CAAC,GAACH,SAAS,CAACE,MAA3B,EAAmCC,CAAC,EAApC,EAAuC;UACnCF,eAAe,CAACG,IAAhB,CAAsBJ,SAAS,CAACG,CAAD,CAA/B;QACH;MACJ;;MACD,KAAKK,SAAL,CAAeP,eAAf,EAda,CAeb;;MACAI,OAAO,CAACI,KAAR,CAAc,KAAKZ,WAAL,CAAiBC,IAAjB,GAAwB,IAAtC,EAA4CG,eAA5C;IACH;;;;;;AACJ;AACD;;AAEA;AACA;AACA;;IACOS,kB;;;;;;;;;;;;;;IAEH;AACJ;AACA;AACA;AACA;IACK,gBAAM;MACH;MACA,KAAKC,2BAAL;IACH;IAED;AACJ;AACA;AACA;AACA;AACA;;;;WACK,uCAA6B;MAAA;;MAC1B,IAAMC,IAAI,GAAGhC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;MACA+B,IAAI,CAACC,gBAAL,CAAsB,yBAAtB,EAAiD,UAACC,CAAD,EAAO;QACpD,KAAI,CAACC,wBAAL,CAA8BD,CAA9B;MACH,CAFD,EAEG,KAFH;IAGH;;;WAED,kCAAyBtB,IAAzB,EAA8B;MAC1B,IAAMwB,WAAW,GAAG,KAAKrC,OAAL,CAAasC,gBAAb,CAA8B,kBAA9B,CAApB;MACA,IAAMC,YAAY,GAAG1B,IAAI,CAAC2B,MAAL,CAAYC,gBAAjC,CAF0B,CAG1B;MACA;;MACA,KAAM,IAAIjB,CAAC,GAAC,CAAZ,EAAeA,CAAC,GAACa,WAAW,CAACd,MAA7B,EAAqCC,CAAC,EAAtC,EAAyC;QACrC,IAAMkB,KAAK,GAAUL,WAAW,CAACb,CAAD,CAAhC;QACA,IAAMmB,YAAY,GAAGD,KAAK,CAACE,OAAN,CAAe,mBAAf,CAArB;;QAEA,IAAK/B,IAAI,CAAC2B,MAAL,CAAYC,gBAAZ,GAA+B,CAApC,EAAuC;UACnCE,YAAY,CAACE,SAAb,CAAuBC,GAAvB,CAA4B,4BAA5B;QACH,CAFD,MAGK;UACDH,YAAY,CAACE,SAAb,CAAuBE,MAAvB,CAA+B,4BAA/B;QACH;;QACDL,KAAK,CAACM,SAAN,GAAkBT,YAAlB;MACH;IACJ;;;;EA1C6B3C,gB"}